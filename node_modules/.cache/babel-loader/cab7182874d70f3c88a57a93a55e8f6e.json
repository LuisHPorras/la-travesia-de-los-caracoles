{"remainingRequest":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/babel-loader/lib/index.js!/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/src/components/ParallaxContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/src/components/ParallaxContainer.vue","mtime":1553200172866},{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nexport default {\n  name: 'ParallaxContainer',\n  provide: function provide() {\n    return {\n      parallaxContainer: this.data\n    };\n  },\n  data: function data() {\n    return {\n      data: {\n        height: 0,\n        scrollFactor: 0,\n        width: 0\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.calcParallax(); // We're using a `requestAnimationFrame()`\n    // for optimal performance.\n\n    var eventHandler = function eventHandler() {\n      return requestAnimationFrame(_this.calcParallax);\n    };\n\n    window.addEventListener('resize', eventHandler);\n    window.addEventListener('scroll', eventHandler); // Remove the scroll hanlder when the\n    // component is destroyed.\n\n    this.$on(\"hook:destroyed\", function () {\n      window.removeEventListener('resize', eventHandler);\n      window.removeEventListener('scroll', eventHandler);\n    });\n  },\n  methods: {\n    calcParallax: function calcParallax() {\n      var containerRect = this.$el.getBoundingClientRect();\n      this.data.height = containerRect.height;\n      this.data.width = containerRect.width;\n      var viewportOffsetTop = containerRect.top;\n      var viewportOffsetBottom = window.innerHeight - viewportOffsetTop;\n      this.data.scrollFactor = viewportOffsetBottom / (window.innerHeight + this.data.height);\n    }\n  }\n};",{"version":3,"sources":["ParallaxContainer.vue"],"names":[],"mappings":";;;;;;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,OAFA,qBAEA;AACA,WAAA;AACA,MAAA,iBAAA,EAAA,KAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,MAAA,EAAA,CADA;AAEA,QAAA,YAAA,EAAA,CAFA;AAGA,QAAA,KAAA,EAAA;AAHA;AADA,KAAA;AAOA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AAAA;;AACA,SAAA,YAAA,GADA,CAGA;AACA;;AACA,QAAA,YAAA,GAAA,SAAA,YAAA;AAAA,aAAA,qBAAA,CAAA,KAAA,CAAA,YAAA,CAAA;AAAA,KAAA;;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,YAAA;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,YAAA,EAPA,CAQA;AACA;;AACA,SAAA,GAAA,mBAAA,YAAA;AACA,MAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,YAAA;AACA,MAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,YAAA;AACA,KAHA;AAIA,GA9BA;AA+BA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,UAAA,aAAA,GAAA,KAAA,GAAA,CAAA,qBAAA,EAAA;AAEA,WAAA,IAAA,CAAA,MAAA,GAAA,aAAA,CAAA,MAAA;AACA,WAAA,IAAA,CAAA,KAAA,GAAA,aAAA,CAAA,KAAA;AAEA,UAAA,iBAAA,GAAA,aAAA,CAAA,GAAA;AACA,UAAA,oBAAA,GAAA,MAAA,CAAA,WAAA,GAAA,iBAAA;AAEA,WAAA,IAAA,CAAA,YAAA,GAAA,oBAAA,IAAA,MAAA,CAAA,WAAA,GAAA,KAAA,IAAA,CAAA,MAAA,CAAA;AACA;AAXA;AA/BA,CAAA","sourcesContent":["<template>\n  <div class=\"ParallaxContainer\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ParallaxContainer',\n  provide () {\n    return {\n      parallaxContainer: this.data\n    }\n  },\n  data () {\n    return {\n      data: {\n        height: 0,\n        scrollFactor: 0,\n        width: 0\n      }\n    }\n  },\n  mounted () {\n    this.calcParallax()\n\n    // We're using a `requestAnimationFrame()`\n    // for optimal performance.\n    const eventHandler = () => requestAnimationFrame(this.calcParallax)\n    window.addEventListener('resize', eventHandler)\n    window.addEventListener('scroll', eventHandler)\n    // Remove the scroll hanlder when the\n    // component is destroyed.\n    this.$on(`hook:destroyed`, () => {\n      window.removeEventListener('resize', eventHandler)\n      window.removeEventListener('scroll', eventHandler)\n    })\n  },\n  methods: {\n    calcParallax () {\n      const containerRect = this.$el.getBoundingClientRect()\n\n      this.data.height = containerRect.height\n      this.data.width = containerRect.width\n\n      const viewportOffsetTop = containerRect.top\n      const viewportOffsetBottom = window.innerHeight - viewportOffsetTop\n\n      this.data.scrollFactor = viewportOffsetBottom / (window.innerHeight + this.data.height)\n    }\n  }\n}\n</script>\n\n<style>\n.ParallaxContainer {\n  overflow: hidden;\n}\n</style>\n"],"sourceRoot":"src/components"}]}