{"remainingRequest":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/src/components/ParallaxContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/src/components/ParallaxContainer.vue","mtime":1553200172866},{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lhp/workspace/src/github.com/la-travesia-de-los-caracoles/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ParallaxContainer',\n  provide () {\n    return {\n      parallaxContainer: this.data\n    }\n  },\n  data () {\n    return {\n      data: {\n        height: 0,\n        scrollFactor: 0,\n        width: 0\n      }\n    }\n  },\n  mounted () {\n    this.calcParallax()\n\n    // We're using a `requestAnimationFrame()`\n    // for optimal performance.\n    const eventHandler = () => requestAnimationFrame(this.calcParallax)\n    window.addEventListener('resize', eventHandler)\n    window.addEventListener('scroll', eventHandler)\n    // Remove the scroll hanlder when the\n    // component is destroyed.\n    this.$on(`hook:destroyed`, () => {\n      window.removeEventListener('resize', eventHandler)\n      window.removeEventListener('scroll', eventHandler)\n    })\n  },\n  methods: {\n    calcParallax () {\n      const containerRect = this.$el.getBoundingClientRect()\n\n      this.data.height = containerRect.height\n      this.data.width = containerRect.width\n\n      const viewportOffsetTop = containerRect.top\n      const viewportOffsetBottom = window.innerHeight - viewportOffsetTop\n\n      this.data.scrollFactor = viewportOffsetBottom / (window.innerHeight + this.data.height)\n    }\n  }\n}\n",{"version":3,"sources":["ParallaxContainer.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"ParallaxContainer.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"ParallaxContainer\">\n    <slot/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ParallaxContainer',\n  provide () {\n    return {\n      parallaxContainer: this.data\n    }\n  },\n  data () {\n    return {\n      data: {\n        height: 0,\n        scrollFactor: 0,\n        width: 0\n      }\n    }\n  },\n  mounted () {\n    this.calcParallax()\n\n    // We're using a `requestAnimationFrame()`\n    // for optimal performance.\n    const eventHandler = () => requestAnimationFrame(this.calcParallax)\n    window.addEventListener('resize', eventHandler)\n    window.addEventListener('scroll', eventHandler)\n    // Remove the scroll hanlder when the\n    // component is destroyed.\n    this.$on(`hook:destroyed`, () => {\n      window.removeEventListener('resize', eventHandler)\n      window.removeEventListener('scroll', eventHandler)\n    })\n  },\n  methods: {\n    calcParallax () {\n      const containerRect = this.$el.getBoundingClientRect()\n\n      this.data.height = containerRect.height\n      this.data.width = containerRect.width\n\n      const viewportOffsetTop = containerRect.top\n      const viewportOffsetBottom = window.innerHeight - viewportOffsetTop\n\n      this.data.scrollFactor = viewportOffsetBottom / (window.innerHeight + this.data.height)\n    }\n  }\n}\n</script>\n\n<style>\n.ParallaxContainer {\n  overflow: hidden;\n}\n</style>\n"]}]}